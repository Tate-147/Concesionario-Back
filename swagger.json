{
    "openapi": "3.0.0",
    "info": {
        "title": "API RESTful - Concesionario de Autos",
        "version": "1.0.0",
        "description": "Este proyecto es una API RESTful desarrollada con Node.js y Express. Permite realizar operaciones CRUD sobre dos entidades: Users y Cars. El proyecto incluye autenticación, validación de datos y manejo de errores centralizado."
    },
    "servers": [
        {
            "url": "https://concesionario-back.onrender.com/",
            "description": "Production Server"
        },
        {
            "url": "http://localhost:3000",
            "description": "Local Server"
        }
    ],
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The auto-generated id of the user.",
                        "format": "objectId",
                        "example": "67436c0ecc80bce34f5274d0"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username of the user.",
                        "example": "johndoe"
                    },
                    "password": {
                        "type": "string",
                        "description": "The hash(password) of the user.",
                        "example": "e234dsdom3k2kmdl3l43iwes9vjro44223m3n32kn5n2ksdo4"
                    },
                    "lastname": {
                        "type": "string",
                        "description": "The lastname of the user.",
                        "example": "Doe"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the user.",
                        "example": "John"
                    },
                    "birthdate": {
                        "type": "date",
                        "description": "The birthdate of the user.",
                        "example": "1990-01-01"
                    },
                    "addressname": {
                        "type": "string",
                        "description": "The addressname of the user.",
                        "example": "Street"
                    },
                    "addressnumber": {
                        "type": "number",
                        "description": "The addressnumber of the user.",
                        "example": "123"
                    },
                    "postcode": {
                        "type": "number",
                        "description": "The postcode of the user.",
                        "example": "12345"
                    },
                    "city": {
                        "type": "string",
                        "description": "The city of the user.",
                        "example": "City"
                    },
                    "province": {
                        "type": "string",
                        "description": "The province of the user.",
                        "example": "Province"
                    },
                    "country": {
                        "type": "string",
                        "description": "The country of the user.",
                        "example": "Country"
                    },
                    "phone": {
                        "type": "number",
                        "description": "The phone of the user.",
                        "example": "123456789"
                    },
                    "cellphone": {
                        "type": "number",
                        "description": "The cellphone of the user.",
                        "example": "123456789"
                    },
                    "email": {
                        "type": "string",
                        "description": "The email of the user.",
                        "example": "mail@example.com"
                    }
                }
            },
            "Car": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the car.",
                        "format": "uuid",
                        "example": "5b900eb1-639b-4164-87ad-d69546f91542"
                    },
                    "brand": {
                        "type": "string",
                        "description": "The brand of the car.",
                        "example": "Mitsubishi"
                    },
                    "model": {
                        "type": "string",
                        "description": "The model of the car.",
                        "example": "Montero"
                    },
                    "color": {
                        "type": "string",
                        "description": "The color of the car.",
                        "example": "Gris"
                    },
                    "year": {
                        "type": "number",
                        "description": "The year of the car.",
                        "example": "2009"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the car.",
                        "example": "Distribución hecha hace 20.000 kms, gomas nuevas, recién encerado y pu…"
                    },
                    "price": {
                        "type": "number",
                        "description": "The price of the car.",
                        "example": "2814.46"
                    },
                    "urlToImage": {
                        "type": "string",
                        "description": "The url of the image of the car.",
                        "example": "https://upload.wikimedia.org/wikipedia/commons/thumb/d/d2/Mitsubishi_M…"
                    },
                    "user": {
                        "type": "mongoose.Schema.Types.ObjectId",
                        "description": "The id of the user.",
                        "format": "objectId",
                        "example": "67436c0ecc80bce34f5274d0"
                    }
                }
            }
        },
        "responses": {
            "400": {
                "description": "Bad Request",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "success"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "car found"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                }
            },    
            "500": {
                "description": "Internal Server Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "failed"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "server error"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "paths": {
        "/users": {
            "get": {
                "summary": "Gets a list of users.",
                "tags": ["Users"],
                "operationId": "getUsers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "users found"
                                        },
                                        "data": {
                                            "type": "array",
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500":{"$ref": "#/components/responses/500"}
                }
            },
            "post": {
                "summary": "Creates a new user.",
                "tags": ["Users"],
                "operationId": "createUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user created"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{"$ref": "#/components/responses/400"},
                    "500":{"$ref": "#/components/responses/500"}
                }
            }    
        },
        "/users/{id}": {
            "get": {
                "summary": "Gets a user by id.",
                "tags": ["Users"],
                "operationId": "getUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the user.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "objectId",
                            "example": "67436c0ecc80bce34f5274d0"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{"$ref": "#/components/responses/400"},    
                    "500":{"$ref": "#/components/responses/500"}
                }
            },
            "put": {
                "summary": "Updates a user by id.",
                "tags": ["Users"],
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the user.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "objectId",
                            "example": "67436c0ecc80bce34f5274d0"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user updated"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{"$ref": "#/components/responses/400"},    
                    "500":{"$ref": "#/components/responses/500"}
                }
            },
            "delete": {
                "summary": "Deletes a user by id.",
                "tags": ["Users"],
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the user.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "objectId",
                            "example": "67436c0ecc80bce34f5274d0"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user deleted"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{"$ref": "#/components/responses/400"},    
                    "500":{"$ref": "#/components/responses/500"}
                }
            }
        },
        "/cars": {
            "get": {
                "summary": "Gets a list of cars.",
                "tags": ["Cars"],
                "operationId": "getCars",
                "parameters": [
                    {
                        "name": "brand",
                        "in": "query",
                        "description": "The brand of the car.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Mitsubishi"
                        }
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "description": "The model of the car.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Montero"
                        }
                    },
                    {
                        "name": "minPrice",
                        "in": "query",
                        "description": "The minimum price of the car.",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "example": "1000"
                        }
                    },
                    {
                        "name": "maxPrice",
                        "in": "query",
                        "description": "The maximum price of the car.",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "example": "5000"
                        }
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "The property to order the cars.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["brand", "model", "color", "year", "price"],
                            "example": "brand"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The order of the cars.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["asc", "desc"],
                            "example": "asc"
                        }
                    },
                    { 
                        "name": "page",
                        "in": "query",
                        "description": "The page number.",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "example": "1"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of cars per page.",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "example": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "car list"
                                        },
                                        "data": {
                                            "type": "array",
                                            "$ref": "#/components/schemas/Car"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500":{"$ref": "#/components/responses/500"}
                }
            },
            "post": {
                "summary": "Creates a new car.",
                "tags": ["Cars"],
                "operationId": "createCar",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Car"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "car created"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Car"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{"$ref": "#/components/responses/400"},
                    "500":{"$ref": "#/components/responses/500"}
                }
            }    
        },
        "/cars/{id}": {
            "get": {
                "summary": "Gets a car by id.",
                "tags": ["Cars"],
                "operationId": "getCar",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the car.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "5b900eb1-639b-4164-87ad-d69546f91542"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "car found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Car"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{"$ref": "#/components/responses/400"},
                    "500":{"$ref": "#/components/responses/500"}
                }
            },
            "put": {
                "summary": "Updates a car by id.",
                "tags": ["Cars"],
                "operationId": "updateCar",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the car.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "5b900eb1-639b-4164-87ad-d69546f91542"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Car"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "car updated"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Car"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{"$ref": "#/components/responses/400"},
                    "500":{"$ref": "#/components/responses/500"}
                }
            },
            "delete": {
                "summary": "Deletes a car by id.",
                "tags": ["Cars"],
                "operationId": "deleteCar",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the car.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "5b900eb1-639b-4164-87ad-d69546f91542"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "car deleted"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Car"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{"$ref": "#/components/responses/400"},
                    "500":{"$ref": "#/components/responses/500"}
                }
            }
        }
    }
}
